#!/usr/bin/env bash

source $WORKING_DIR/common/functions.sh

hook::config() {
  cat <<EOF
{
   "onKubernetesEvent": [
      {
         "kind": "secret",
         "event": [
            "add",
            "update"
         ],
         "selector": {
            "matchLabels": {
               "secret-copier": "yes"
            }
         },
         "namespaceSelector": {
            "matchNames": [
               "default"
            ]
         }
      }
   ]
}
EOF
}

hook::trigger() {
  for secret in $(jq -r '.[] | .resourceName' $BINDING_CONTEXT_PATH)
  do
    # loop through every namespace except 'default'
    for namespace in $(kubectl get namespace -o json |
                      jq -r '.items[] |
                        select((.metadata.name == "default" | not) and .status.phase == "Active") | .metadata.name')
    do
      # copy secret with a necessary data
      kubectl -n default get secret $secret -o json | \
        jq -r ".metadata.namespace=\"${namespace}\" |
                .metadata |= with_entries(select([.key] | inside([\"name\", \"namespace\", \"labels\"])))" \
        | kubectl::replace_or_create
    done
  done
}

common::run_hook "$@"
